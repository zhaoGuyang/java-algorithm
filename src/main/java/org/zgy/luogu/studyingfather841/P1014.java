package org.zgy.luogu.studyingfather841;

/**
 * @Author z
 * @create 2021/10/19 8:59
 */
public class P1014 {

  static String[][] arr = new String[][]{
      {"1/1", "1/2", "1/3", "1/4", "1/5"},
      {"2/1", "2/2", "2/3", "2/4", "2/5"},
      {"3/1", "3/2", "3/3", "3/4", "3/5"},
      {"4/1", "4/2", "4/3", "4/4", "4/5"},
      {"5/1", "5/2", "5/3", "5/4", "5/5"}
  };
  /*
  题目要求按Z字形排列：1/1,1/2,2/1,3/1,2/2,1/3,1/4,2/3,3/2,4/1,5/1...
  图形向右旋转45°得到下图：
  1/1
  1/2,2/1
  3/1,2/2,1/3
  1/4,2/3,3/2,4/1
  5/1,4/2,3/3,2/4,1/5
  ...

  这个宝塔的索引就是：
  1
  2,3
  4,5,6
  7,8,9,10
  ...

  每一层都比上一层多一，是不是很像等差数列？
   */

  public static void main(String[] args) {
    System.out.println(func(59));
  }

  public static String func(int n) {
    /*
    输入索引n，先根据n求出n所在上面塔的第几行，就可以求出n对应的值

    利用等差数列，求出n所在第几行
    * */

    int t = 1, ans = 0;//t是表示下一次跳到下一次的距离，ans是表示第几层

    while (true) {
      if (n > t) {
        n -= t;
        ans++;
        t++;
      }//printf("%d\n",ans);
      else if (n == t && ans % 2 == 0) {
        return "1/" + (ans + 1);
      }
      //如果在n==t，并且为偶数层，就在第一行 第ans+1个
      else if (n == t && ans % 2 != 0) {
        return (ans + 1) + "/1";
      }
      //如果在n==t，并且为奇数层，就在第ans+1行 第一个
      else if (n < t && ans % 2 != 0) {
        return (ans + n - t + 1) + "/" + (t - n + 1);
      }
      //如果在n<t，并且为奇数层，t-n+1表示该层最后一个往后走n-1步，ans+n-t+1示该层最后一个往上走t-1步
      else if (n < t && ans % 2 == 0) {
        return (t - n + 1) + "/" + (ans + n - t + 1);
      }
      // 如果在n<t，并且为偶数层，t-n+1表示该层最后一个往上走n-1步，ans+n-t+1示该层最后一个往后走t-1步
    }
  }
}
